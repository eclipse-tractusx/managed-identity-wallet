# /********************************************************************************
# * Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License, Version 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0.
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# * License for the specific language governing permissions and limitations
# * under the License.
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

version: '3'

tasks:
  build:
    desc: Build the app and the corresponding Docker image (tagged as "miw-test")
    cmds:
      - task: :app:build
      - docker build -t local-miw --platform linux/amd64 .

  start-middleware:
    desc: Spin up local Docker environment
    dir: dev-assets/docker-environment
    ignore_error: true
    vars:
      OPTIONS: '{{ default "" .OPTIONS }}'
      CONTAINERS: '{{ default "postgres keycloak" .CONTAINERS }}'
    cmds:
      - cat postgres/db.sh.tpl | envsubst > postgres/db.sh
      - chmod +x postgres/db.sh
      - "docker compose up {{.OPTIONS}} {{.CONTAINERS}}"

  stop-middleware:
    desc: Stop local Docker environment
    dir: dev-assets/docker-environment
    cmds:
      - docker compose down
      - cmd: docker volume remove docker-environment_postgres_data
        ignore_error: true
      - rm -f postgres/db.sh

  start-app:
    desc: Run the app in a container environment (including middleware aka Postgresql and Keycloak)
    cmds:
      - task: start-middleware
        vars:
          OPTIONS: "-d"
      - task: build
      - cmd: docker rm miw-app
        ignore_error: true
      - task: start-middleware
        vars:
          CONTAINERS: "miw"

  stop-app:
    desc: Stop all running containers
    cmds:
      - cmd: docker stop miw
        ignore_error: true
      - task: stop-middleware

  cleanup:
    desc: Cleans everything about docker...
    cmds:
      - cmd: docker rmi local-miw
        ignore_error: true

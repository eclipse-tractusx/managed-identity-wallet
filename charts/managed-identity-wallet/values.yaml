replicaCount: 1

image:
  repository: ghcr.io/catenax-ng/tx-managed-identity-wallets_miw_service
  pullPolicy: Always
  tag: ""

imagePullSecrets:
  - name: acr-credential

nameOverride: ""
fullnameOverride: ""

secrets:
  DB_USER_NAME: xxx # Has to be the same as below in "postgresql" section
  DB_PASSWORD: xxx # Has to be the same as below in "postgresql" section
  KEYCLOAK_CLIENT_ID: xxx
  ENCRYPTION_KEY: xxx

envs:
  APPLICATION_PORT: xxx
  APPLICATION_ENVIRONMENT: xxx
  DB_HOST: xxx
  DB_PORT: xxx
  DB_NAME: xxx
  USE_SSL: xxx
  DB_POOL_SIZE: xxx
  KEYCLOAK_MIW_PUBLIC_CLIENT: xxx
  MANAGEMENT_PORT: xxx
  MIW_HOST_NAME: xxx
  AUTHORITY_WALLET_BPN: xxx
  AUTHORITY_WALLET_NAME: xxx
  AUTHORITY_WALLET_DID: xxx
  VC_SCHEMA_LINK: xxx
  VC_EXPIRY_DATE: xxx
  KEYCLOAK_REALM: xxx
  AUTH_SERVER_URL: xxx

serviceAccount:
  create: true
  annotations: {}
  name: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /$1
#    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#    nginx.ingress.kubernetes.io/server-snippet: |
#      location ~* /list-credential/ {
#          deny all;
#          return 403;
#      }
#
#      location ~* /webhook/topic/ {
#        deny all;
#        return 403;
#      }
  hosts:
    - host: chart-example.local
      paths:
        - path: /(.*)
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# provide only the numbers without suffix (Mi or m will be added in template)
resources:
  memory: 256
  cpu: 250

nodeSelector:
  "kubernetes.io/os": linux

tolerations: []

affinity: {}

podAnnotations: {}

postgresql:
  auth:
    password: postgres
    username: postgres
    postgresPassword: postgres